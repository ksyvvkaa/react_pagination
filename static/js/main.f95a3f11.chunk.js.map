{"version":3,"sources":["components/ItemList/ItemList.tsx","components/Pagination/Pagination.tsx","components/PerPageSelector/PerPageSelector.tsx","App.tsx","utils.ts","index.tsx"],"names":["ItemList","items","map","item","Pagination","props","total","perPage","onPageChange","currentPage","pages","Array","from","length","Math","ceil","_","i","className","cn","disabled","href","onClick","page","active","PerPageSelector","onPerPageChange","currentPerPage","id","onChange","value","htmlFor","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setPerPage","firstItemToDisplay","lastItemToDisplay","itemsToDisplay","slice","event","target","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,S,gBCAnBC,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,aAHF,EAKIH,EADFI,mBAJF,MAIgB,EAJhB,EAOMC,EAAQC,MAAMC,KAClB,CAAEC,OAAQC,KAAKC,KAAKT,EAAQC,KAC5B,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KAehB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBX,IAA3C,SACE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QApBoB,WACtBb,EAAc,GAChBD,EAAaC,EAAc,IAazB,oBAWDC,EAAMR,KAAI,SAAAqB,GAAI,OACb,oBACEL,UAAWC,IAAG,YAAa,CAAEK,OAAQD,IAASd,IADhD,SAIE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMd,EAAae,IAJ9B,SAMGA,KAREA,MAaT,oBACEL,UAAWC,IAAG,YAAa,CAAEC,SAAUX,IAAgBC,EAAMG,SAD/D,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeZ,IAAgBC,EAAMG,OACrCS,QA5CoB,WACtBb,EAAcC,EAAMG,QACtBL,EAAaC,EAAc,IAqCzB,wBC7DKgB,EAAmC,SAACpB,GAC/C,IAAQqB,EAAoCrB,EAApCqB,gBAAiBC,EAAmBtB,EAAnBsB,eAEzB,OACE,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRU,GAAG,kBACHV,UAAU,eACVW,SAAUH,EACVI,MAAOH,EALT,UAOE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBb,UAAU,qBAA3C,gCCrBAjB,ECNC,SAAoBW,EAAcoB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAItB,EAAMsB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAAIlC,KAAI,SAAAgC,GAAC,qBAAYA,MAEpCG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB8B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO/B,EAAP,KAAgBiC,EAAhB,KAWMC,EAAqBlC,EAAUE,EAAcF,EAC7CmC,EAAoBnC,EAAUE,EAAcR,EAAMY,OACpDZ,EAAMY,OAAS,EACfN,EAAUE,EAAc,EAEtBkC,EAAiB1C,EAAM2C,MAC3BH,EACAC,EAAoB,GAGtB,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCgC,EAAqB,EADtD,cAC6DC,EAAoB,EADjF,eACyFzC,EAAMY,OAD/F,OAIA,cAAC,EAAD,CACEa,gBA5BsB,SAACmB,GAC3BL,GAAYK,EAAMC,OAAOhB,OACzBS,EAAe,IA2BXZ,eAAgBpB,IAGlB,cAAC,EAAD,CACED,MAAOL,EAAMY,OACbN,QAASA,EACTE,YAAaA,EACbD,aA/BmB,SAACe,GACxBgB,EAAehB,MAiCb,cAAC,EAAD,CAAUtB,MAAO0C,QEhDvBI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f95a3f11.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  items: string[];\n}\n\nexport const ItemList: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    onPageChange,\n    currentPage = 1,\n  } = props;\n\n  const pages = Array.from(\n    { length: Math.ceil(total / perPage) },\n    (_, i) => i + 1,\n  );\n\n  const handlePrevLinkClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextLinkClick = () => {\n    if (currentPage < pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevLinkClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: currentPage === pages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={handleNextLinkClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  onPerPageChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  currentPerPage: number;\n}\n\nexport const PerPageSelector: React.FC<Props> = (props) => {\n  const { onPerPageChange, currentPerPage } = props;\n\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          onChange={onPerPageChange}\n          value={currentPerPage}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination, PerPageSelector, ItemList } from './components';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageSelect = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const firstItemToDisplay = perPage * currentPage - perPage;\n  const lastItemToDisplay = perPage * currentPage > items.length\n    ? items.length - 1\n    : perPage * currentPage - 1;\n\n  const itemsToDisplay = items.slice(\n    firstItemToDisplay,\n    lastItemToDisplay + 1,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemToDisplay + 1} - ${lastItemToDisplay + 1} of ${items.length})`}\n      </p>\n\n      <PerPageSelector\n        onPerPageChange={handlePerPageChange}\n        currentPerPage={perPage}\n      />\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageSelect}\n      />\n\n      <ItemList items={itemsToDisplay} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}